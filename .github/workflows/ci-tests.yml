name: pytest
env:
  PYTHONHASHSEED: "0"

on:
  push:
    branches:
      - main
      - epic/*
      - "[0-9]+.[0-9]+.x"
  pull_request:
    branches:
      - main
      - epic/*
      - "[0-9]+.[0-9]+.x"
  workflow_dispatch:

jobs:
  codecov:
    name: Unit tests + coverage
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version: ["3.7"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: |
            ${{ github.workflow }}-${{ github.job }}-${{ matrix.os }}-py${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
          path: |
            .pytest_cache
            ~/.cache/pip/
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Test with pytest-cov
        run: pytest tests --cov=sphinxcontrib.hep.pdgref --cov-report=xml
      - uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests

  pytest:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        exclude:
          - os: ubuntu-20.04 # coverage job
            python-version: "3.7"
        include:
          - os: macos-11
            python-version: "3.7"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: |
            ${{ github.workflow }}-${{ github.job }}-${{ matrix.os }}-py${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
          path: |
            .pytest_cache
            ~/.cache/pip/
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Test with pytest
        run: pytest tests
      # cspell:ignore IMPORTMISMATCH
      - name: Run doctests
        run: PY_IGNORE_IMPORTMISMATCH=1 pytest src
